pipeline {
    agent any

    parameters {
        booleanParam(name: 'skip_sonar', defaultValue: false, description: 'Set to true to run sonar analysis')
        booleanParam(name: 'destroy_compose', defaultValue: false, description: 'Set to true to destroy the compose build')
    }

    tools {
        maven 'maven'
    }

    stages {
        stage('Clean Stage') {
            steps {
                sh "docker-compose down --volumes"
                sh "docker stop sonarqube || true"
            }
        }

        stage ('Set Up Stage') {
            steps {
                script {
                    if (!params.skip_sonar) {
                        sh "docker start sonarqube"
                    }
                }
            }
        }

        stage('Product Service Stage') {
            steps {
                dir("product-service") {
                    script {
                        if (!params.skip_sonar) {
                            withSonarQubeEnv('SonarServer') {
                                sh "mvn clean package sonar:sonar \
                                -Dsonar.projectKey=product-service \
                                -Dsonar.projectName=product-service \
                                -Dsonar.sources=src/main"
                            }
                        }
                    }
                }

                dir("product-service") {
                    sh "docker-compose up -d --no-color --wait"
                    sh "docker-compose ps"
                }
            }
        }
    }

    post {
        always {
            script {
                if (params.destroy_compose) {
                    dir("product-service") {
                        sh "docker-compose down --volumes" 
                    }
                }
            }
        }
    }
}
